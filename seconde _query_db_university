
GRUP BY

1. Contare quanti iscritti ci sono stati ogni anno
    SELECT YEAR(enrolment_date) AS anno_di_iscrizione , COUNT(id)
    FROM `students`
    GROUP BY YEAR(enrolment_date);

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio;
    SELECT office_address as ufficio, COUNT(id) 
    FROM `teachers`
    GROUP BY office_address;


3. Calcolare la media dei voti di ogni appello d'esame
    SELECT exam_id as esame, AVG(vote) as media_esame
    FROM `exam_student`  
    GROUP BY exam_id;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
    SELECT department_id as numero_dipartimento, COUNT(id) 
    FROM `degrees`
    GROUP BY department_id;

JOIN

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
    SELECT * 
    FROM students
    INNER JOIN degrees
    ON students.degree_id = degrees.id
    WHERE degrees.name = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
    SELECT * 
    FROM `degrees` 
    INNER JOIN `departments`
    ON degrees.department_id = departments.id
    WHERE degrees.level = 'magistrale'
    AND department_id = 7;

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
    SELECT * 
    FROM `courses` 
    INNER JOIN course_teacher
    ON course_teacher.course_id = courses.id
    INNER JOIN `teachers`
    ON course_teacher.teacher_id= teachers.id
    WHERE teachers.id = 44;


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
    sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
    nome
    SELECT * 
    FROM `students`
    INNER JOIN `degrees`
    ON students.degree_id = degrees.id
    INNER JOIN `departments`
    ON degrees.department_id = departments.id
    ORDER BY students.surname, students.name;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
    SELECT * 
    FROM `degrees`
    INNER JOIN `courses`
    ON degrees.id = courses.degree_id
    INNER JOIN `course_teacher`
    ON course_teacher.course_id = courses.id
    INNER JOIN `teachers`
    ON course_teacher.teacher_id = teachers.id
    ORDER BY degrees.department_id;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

    SELECT DISTINCT teachers.name, teachers.surname, departments.name 
    FROM teachers
    INNER JOIN course_teacher 
    ON course_teacher.teacher_id = teachers.id 
    INNER JOIN courses 
    ON course_teacher.course_id = courses.id 
    INNER JOIN degrees 
    ON courses.degree_id = degrees.id 
    INNER JOIN departments 
    ON degrees.department_id = departments.id 
    WHERE departments.name = "Dipartimento di Matematica";

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.

SELECT students.id, exams.course_id, courses.name, MAX(exam_student.vote) AS max_vote , COUNT(exam_student.exam_id) as totale_esami
FROM `students`
INNER JOIN `exam_student`
ON exam_student.student_id = students.id
INNER JOIN `exams`
ON exam_student.exam_id = exams.id
INNER JOIN courses
ON courses.id = exams.course_id
WHERE exam_student.vote > 18
GROUP BY students.id, exams.course_id;